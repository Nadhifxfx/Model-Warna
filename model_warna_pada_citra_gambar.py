# -*- coding: utf-8 -*-
"""Model Warna pada citra gambar.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hiBFw9jq1E3nj5ZeEW1UOFI0BPPhQa-g
"""

from google.colab import files
import cv2
import numpy as np
import matplotlib.pyplot as plt

# Upload image file
uploaded = files.upload()

# Membaca gambar yang diunggah
image_path = list(uploaded.keys())[0]
image = cv2.imread(image_path)

# Cek apakah gambar berwarna atau grayscale
if len(image.shape) == 3:
    image_gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
else:
    image_gray = image

# Fungsi untuk menampilkan beberapa gambar dalam grid 3x3
def show_grid_images(images, titles, cmap_options):
    plt.figure(figsize=(12, 9))  # Atur ukuran agar lebih rapi

    for i in range(len(images)):
        plt.subplot(3, 3, i + 1)  # 3 baris, 3 kolom
        plt.imshow(images[i], cmap=cmap_options[i])
        plt.title(titles[i], fontsize=10)
        plt.axis('off')

    plt.tight_layout()  # Atur agar gambar tidak tumpang tindih
    plt.show()

# Transformasi Citra
negative_image = 255 - image_gray
log_image = np.uint8(255 / np.log(1 + np.max(image_gray)) * np.log(1 + image_gray.astype(np.float32)))
power_law_image = np.array(255 * (image_gray / 255) ** 0.5, dtype='uint8')
equalized_image = cv2.equalizeHist(image_gray)
normalized_image = cv2.normalize(image_gray, None, 0, 255, cv2.NORM_MINMAX)
image_hsi = cv2.cvtColor(cv2.cvtColor(image, cv2.COLOR_BGR2RGB), cv2.COLOR_RGB2HSV)

# Ekstraksi komponen Hue dari HSI
hue_component = image_hsi[:, :, 0]

# Thresholding (Otsu)
_, threshold_image = cv2.threshold(image_hsi[:, :, 2], 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

# Menampilkan dalam grid 3x3
show_grid_images(
    [cv2.cvtColor(image, cv2.COLOR_BGR2RGB), image_gray, negative_image, log_image,
     power_law_image, equalized_image, normalized_image, hue_component, threshold_image],
    ['Gambar Asli (RGB)', 'Gambar Asli (Grayscale)', 'Citra Negative', 'Transformasi Log',
     'Transformasi Power Law', 'Histogram Equalization', 'Histogram Normalization',
     'Komponen Hue (HSI)', 'Thresholding Otsu'],
    [None, 'gray', 'gray', 'gray', 'gray', 'gray', 'gray', 'gray', 'gray']
)